#!/usr/bin/env node
/*jshint multistr: true */
/*
# Usage: homework fetch
# Summary: Download your next homework assignment
# Help: Download your next homework assignment
*/

var inquirer = require('inquirer');
var path = require('path');
var fs = require('fs');
var mkdirp = require('mkdirp')
var util = require('util');
var assignments = require('../lib/api/fetch-assignment/index.js');
var spinner = require('../lib/spinner')(inquirer);
var filepath = process.env.HOME;
// var validate = require('../lib/validate-homework-data');
// var normalize = require('../lib/normalize-homework-data');

// stting new filepath for the fetch data to be saved to
// testfetch need t be the destination directory specified
// in the homeworkrc file
var newfilepath = path.join(filepath, '/testfetch')

assignments.setup('123abc'); // setup cohort

spinner.start('Fetching assignment... ');
assignments.next().on('complete',function(response){
  spinner.stop();
  console.log(response)
 	mkdirp(newfilepath, response.json, function(err){
  	if(err) {
  		console.log(err);
  	} else 	{
  		console.log(newfilepath, "now exists");
  		console.log(response)
  	}
  })

})


// inquirer.prompt([
//   {
//     name: 'commit',
//     type: 'confirm',
//     message: function(answers){
//       var data = JSON.stringify(normalize(answers), null, 4) + '\n';
//       return util.format("About to write to %s\n%s\nIs this ok?", process.cwd(), data);
//     }
//   }
// ], function(answers) {
//   if(answers.commit){
//     delete answers.commit;
//     initHomework(answers);
//   } else {
//     console.log('Aborted.');
//   }
// });

// function transformValidator(validator){
//   return function(input){
//     var result = validator(input);
//     return result.valid ? true : result.errors[0];
//   };
// }
